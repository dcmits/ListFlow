<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="22" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderToggleButtonBackground}"
                                    Stroke="{StaticResource ExpanderToggleButtonBorder}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1 1 L 6 7 L 11 1"
                                    RenderTransformOrigin="0.5,0.5"
                                    SnapsToDevicePixels="True"
                                    Stroke="{StaticResource ExpanderToggleButtonForeground}"
                                    StrokeThickness="2.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                                <!--<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stroke="{StaticResource ExpanderToggleButtonForeground}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <!--  Margin="0,4,0,0"  -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1 7 L 6 1 L 11 7"/>
                        -->
                        <!--<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>-->
                        <!--
            </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource HoverExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource PressedExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource PressedExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource DisabledExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderToggleButtonBackground}"
                                    Stroke="{StaticResource ExpanderToggleButtonBorder}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1 1 L 6 7 L 11 1"
                                    RenderTransformOrigin="0.5,0.5"
                                    SnapsToDevicePixels="True"
                                    Stroke="{StaticResource ExpanderToggleButtonForeground}"
                                    StrokeThickness="2.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                                <!--<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stroke="{StaticResource ExpanderToggleButtonForeground}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1 7 L 6 1 L 11 7"/>
                        -->
                        <!--<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>-->
                        <!--
            </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource HoverExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource PressedExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource PressedExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource DisabledExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="22" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderToggleButtonBackground}"
                                    Stroke="{StaticResource ExpanderToggleButtonBorder}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1 2 L 6 8 L 11 2"
                                    RenderTransformOrigin="0.5,0.5"
                                    SnapsToDevicePixels="True"
                                    Stroke="{StaticResource ExpanderToggleButtonForeground}"
                                    StrokeThickness="2.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                                <!--<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stroke="{StaticResource ExpanderToggleButtonForeground}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1 7 L 6 1 L 11 7"/>
                        -->
                        <!--<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>-->
                        <!--
            </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource HoverExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource PressedExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource PressedExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource DisabledExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="True"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                x:Name="circle"
                                Width="22"
                                Height="22"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource ExpanderToggleButtonBackground}"
                                Stroke="{StaticResource ExpanderToggleButtonBorder}" />
                            <Path
                                x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 1 2 L 6 8 L 11 2"
                                RenderTransformOrigin="0.5,0.5"
                                SnapsToDevicePixels="True"
                                Stroke="{StaticResource ExpanderToggleButtonForeground}"
                                StrokeThickness="2.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </Path.RenderTransform>
                            </Path>
                            <!--<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stroke="{StaticResource ExpanderToggleButtonForeground}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1 7 L 6 1 L 11 7"/>
                        -->
                        <!--<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>-->
                        <!--
            </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource HoverExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="Firebrick" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource PressedExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource PressedExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource HoverExpanderToggleButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonBorder}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource DisabledExpanderToggleButtonBackground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource DisabledExpanderToggleButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
