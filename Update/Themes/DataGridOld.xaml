<ResourceDictionary
  x:Class="WpfSvg.Themes.DataGrid"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:WpfDataGrid">

  <!--  Style and template for the resize control on the DataGridColumnHeader.  -->
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="5" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style and template for the DataGridColumnHeader.  -->
  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{StaticResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{StaticResource DataGridHeaderForeground}" />
    <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorder}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="MinHeight" Value="18" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="SeparatorBrush" Value="{StaticResource DataGridHeaderSeparator}" />
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Padding" Value="4,0,0,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridColumnHeader">
          <ControlTemplate.Resources>
            <!--  Mouse Hover On Storyboard  -->
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="Hover"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <!--  Mouse Hover Off Storyboard  -->
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="Hover"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <!--  Header Content  -->
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--  Header Normal  -->
            <Rectangle
              x:Name="BackgroundRectangle"
              Grid.RowSpan="2"
              Grid.ColumnSpan="4"
              Fill="{StaticResource DataGridHeaderBackground}"
              Stretch="Fill"
              Stroke="{StaticResource DataGridHeaderBorder}"
              StrokeThickness="1" />
            <!--  Header Mouse Hover  -->
            <Rectangle
              x:Name="Hover"
              Grid.RowSpan="2"
              Grid.ColumnSpan="4"
              Fill="{StaticResource HoverDataGridHeaderBackground}"
              Opacity="0"
              Stretch="Fill" />
            <!--  Title  -->
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Cursor="{TemplateBinding Cursor}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <!--  Direction Arrow  -->
            <Path
              x:Name="SortArrow"
              Grid.RowSpan="2"
              Grid.Column="2"
              Width="8"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
              Fill="{StaticResource DataGridUpDownArrowBrush}"
              Opacity="0"
              RenderTransformOrigin=".5,.5"
              Stretch="Uniform">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform x:Name="SortIconTransform" ScaleX=".9" ScaleY=".9" />
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
            <!--  Column Resizer Gripper  -->
            <Thumb
              x:Name="PART_LeftHeaderGripper"
              Grid.Column="0"
              Margin="0,0,9,0"
              HorizontalAlignment="Left"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb
              x:Name="PART_RightHeaderGripper"
              Grid.Column="3"
              Margin="0,0,-9,0"
              HorizontalAlignment="Right"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
          </Grid>
          <ControlTemplate.Triggers>
            <!--  Sort Direction Up  -->
            <!--
            <Trigger local:TriggerTracing.TriggerName="DataGridColumnHeader.SortDirection.Ascending" local:TriggerTracing.TraceEnabled="True" Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
                </Setter>
              <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="1" />
            </Trigger>
            -->
            <!--  Sort Direction Down  -->
            <!--
            <Trigger local:TriggerTracing.TriggerName="DataGridColumnHeader.SortDirection.Descending" local:TriggerTracing.TraceEnabled="True" Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
              <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="1" />
            </Trigger>
            -->
            <!--  Mouse Hover  -->
            <!--
            <Trigger local:TriggerTracing.TriggerName="DataGridColumnHeader.IsMouseOver" local:TriggerTracing.TraceEnabled="True" Property="IsMouseOver" Value="true">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
              </Trigger.ExitActions>
            </Trigger>
            -->
            <!--  Pressed  -->
            <!--
            <Trigger local:TriggerTracing.TriggerName="DataGridColumnHeader.IsPressed" local:TriggerTracing.TraceEnabled="True" Property="IsPressed" Value="true">
              <Setter Property="Foreground" Value="{StaticResource PressedDataGridHeaderForeground}"/>
              <Setter Property="Background" Value="{StaticResource PressedDataGridHeaderBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource PressedDataGridHeaderBorder}"/>
            </Trigger>
            -->
            <!--  Enabled  -->
            <!--
            <Trigger local:TriggerTracing.TriggerName="DataGridColumnHeader.IsEnabled" local:TriggerTracing.TraceEnabled="True" Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource DisabledDataGridHeaderForeground}"/>
              <Setter Property="Background" Value="{StaticResource DisabledDataGridHeaderBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledDataGridHeaderBorder}"/>
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style and template for the DataGridColumnHeadersPresenter.  -->
  <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle
              x:Name="Border"
              Fill="{StaticResource {x:Static SystemColors.ControlBrushKey}}"
              SnapsToDevicePixels="True" />
            <Polygon
              x:Name="Arrow"
              Margin="8,8,3,3"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Fill="Black"
              Opacity="0.15"
              Points="0,10 10,10 10,0"
              Stretch="Uniform" />
          </Grid>
          <ControlTemplate.Triggers>
            <!--<Trigger local:TriggerTracing.TriggerName="Button.IsMouseOver" local:TriggerTracing.TraceEnabled="True" Property="IsMouseOver" Value="True">
              <Setter Property="Stroke" TargetName="Border" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
            <Trigger local:TriggerTracing.TriggerName="Button.IsPressed" local:TriggerTracing.TraceEnabled="True" Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Border" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
            <Trigger local:TriggerTracing.TriggerName="Button.IsEnabled" local:TriggerTracing.TraceEnabled="True" Property="IsEnabled" Value="False">
              <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Main component  -->
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="{StaticResource GroupBoxBackground}" />
    <Setter Property="Foreground" Value="{StaticResource DataGridHeaderForeground}" />
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}" />
    <Setter Property="AlternationCount" Value="2" />
    <Setter Property="AlternatingRowBackground" Value="{StaticResource DataGridAlternateBackgroundBrush}" />
    <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DarkBorderBrush}" />
    <Setter Property="RowBackground" Value="{StaticResource GroupBoxBackground}" />
    <!--<Setter Property="VerticalGridLinesBrush" Value="{StaticResource DarkBorderBrush}"/>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="2"
            CornerRadius="5"
            SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button
                      Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Command="{x:Static DataGrid.SelectAllCommand}"
                      Focusable="false"
                      Style="{StaticResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                   TypeInTargetAssembly={x:Type DataGrid}}}"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <DataGridColumnHeadersPresenter
                      x:Name="PART_ColumnHeadersPresenter"
                      Grid.Column="1"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <ScrollContentPresenter
                      x:Name="PART_ScrollContentPresenter"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}" />
                    <ScrollBar
                      x:Name="PART_VerticalScrollBar"
                      Grid.Row="1"
                      Grid.Column="2"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Grid.Column="1"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<Trigger local:TriggerTracing.TriggerName="DataGrid.IsGrouping" local:TriggerTracing.TraceEnabled="True" Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>-->
    </Style.Triggers>
  </Style>

  <!--  Rows  -->
  <Style x:Key="BaseDataGridRowStyle" TargetType="{x:Type DataGridRow}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Ellipse
              Width="12"
              Height="12"
              Margin="0,2,0,0"
              VerticalAlignment="Top"
              Fill="Red"
              Stroke="Black"
              StrokeThickness="0.5" />
            <TextBlock
              Padding="4,0,0,0"
              VerticalAlignment="Top"
              FontWeight="Bold"
              Foreground="White"
              Text="!"
              ToolTip="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <!--  Trigger with visual effect  -->
          <!--<ControlTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.85" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.65" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>-->
          <!--  Trigger with visual effect  -->
          <Border
            x:Name="DGR_Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </SelectiveScrollingGrid.ColumnDefinitions>
              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </SelectiveScrollingGrid.RowDefinitions>

              <!--<Rectangle x:Name="hover_gradient" Stroke="{StaticResource HoverDataGridItemBorder}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Fill="{StaticResource HoverDataGridItemBackground}"/>
              <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Stroke="{StaticResource HoverDataGridItemBorder}" Fill="{StaticResource HoverDataGridItemBackground}"/>
              <Rectangle x:Name="select_gradient" Grid.Row="0" Grid.ColumnSpan="2" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{StaticResource SelectedDataGridItemBackground}" Stroke="{StaticResource SelectedDataGridItemBorder}"/>-->

              <DataGridCellsPresenter
                Grid.Column="1"
                ItemsPanel="{TemplateBinding ItemsPanel}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter
                Grid.Row="1"
                Grid.Column="1"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                Visibility="{TemplateBinding DetailsVisibility}" />
              <DataGridRowHeader
                Grid.RowSpan="2"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

            </SelectiveScrollingGrid>
          </Border>
          <ControlTemplate.Triggers>
            <!--<Trigger local:TriggerTracing.TriggerName="DataGridRow.AlternationIndex" local:TriggerTracing.TraceEnabled="True" Property="ItemsControl.AlternationIndex" Value="1">
              <Setter Property="Background" Value="{StaticResource DataGridItemAlternateBackground}"/>
            </Trigger>
            <Trigger local:TriggerTracing.TriggerName="DataGridRow.IsSelected" local:TriggerTracing.TraceEnabled="True" Property="IsSelected" Value="true">
              <Setter Property="BorderBrush" Value="{StaticResource SelectedDataGridItemBorder}"/>
              <Setter Property="Background" Value="{StaticResource SelectedDataGridItemBackground}"/>
              <Setter Property="Foreground" Value="{StaticResource SelectedDataGridItemForeground}"/>
            </Trigger>
            <Trigger local:TriggerTracing.TriggerName="DataGridRow.IsMouseOver" local:TriggerTracing.TraceEnabled="True"  Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource HoverDataGridItemBorder}"/>
              <Setter Property="Background" Value="{StaticResource HoverDataGridItemBackground}"/>
              <Setter Property="Foreground" Value="{StaticResource HoverDataGridItemForeground}"/>
            </Trigger>
            <Trigger local:TriggerTracing.TriggerName="DataGridRow.IsEnabled" local:TriggerTracing.TraceEnabled="True" Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledDataGridItemForeground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledDataGridItemBorder}"/>
            </Trigger>-->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="false" />
                <Condition Property="ItemsControl.AlternationIndex" Value="1" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{StaticResource DisabledDataGridItemAlternateBackground}" />
            </MultiTrigger>
            <!--  Trigger with visual effect  -->
            <!--<Trigger Property="IsMouseOver" Value="True" SourceName="DGR_Border">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>-->
            <!--  Trigger with visual effect  -->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Cells  -->
  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="select_gradient"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="select_gradient"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
              <!--<Rectangle x:Name="select_gradient" Margin="-2 -1 -2 -1"  Grid.Column="1" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{DynamicResource SelectedDataGridItemBackground}" Stroke="{DynamicResource SelectedDataGridItemBorder}"/>-->
              <Rectangle
                x:Name="select_gradient"
                Grid.Column="1"
                Margin="-2,-1,-2,-1"
                Fill="{StaticResource SelectedDataGridItemBackground}"
                IsHitTestVisible="False"
                Opacity="0"
                RadiusX="1"
                RadiusY="1"
                StrokeThickness="1" />
              <!--<Rectangle x:Name="select_gradient" Margin="-2 -1 -2 -1"  Grid.Column="1" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>-->
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <!--<Trigger local:TriggerTracing.TriggerName="DataGridCell.IsSelected" local:TriggerTracing.TraceEnabled="True" Property="IsSelected" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--<Rectangle x:Name="hover_gradient" Stroke="{DynamicResource HoverDataGridItemBorder}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Fill="{DynamicResource HoverDataGridItemBackground}"/>
              <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Stroke="{DynamicResource HoverDataGridItemBorder}" Fill="{DynamicResource HoverDataGridItemBackground}"/>
              <Rectangle x:Name="select_gradient" Grid.Row="0" Grid.ColumnSpan="2" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{DynamicResource SelectedDataGridItemBackground}" Stroke="{DynamicResource SelectedDataGridItemBorder}"/>-->


  <!--<Rectangle x:Name="hover_gradient" Stroke="{DynamicResource FocusBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Fill="{DynamicResource MouseOverBrush}"/>
              <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Stroke="{DynamicResource MouseOverHighlightBrush}" Fill="{DynamicResource MouseOverHighlightBrush}"/>
              <Rectangle x:Name="select_gradient" Grid.Row="0" Grid.ColumnSpan="2" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>-->

  <!--  Converters  -->
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

  <!--  Row Header Gripper  -->
  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Width" Value="20"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
              </StackPanel>
            </Microsoft_Windows_Themes:DataGridHeaderBorder>
            <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
            <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
</ResourceDictionary>