<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!--  En-tête de colonne alignement à gauche  -->
  <Style x:Key="DataGridColumnHeaderStdSytle" TargetType="DataGridColumnHeader">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource DarkTextForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource DataGridHeaderBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorder}" />
    <!--<Setter Property="BorderThickness" Value="0,0,1,0"/>-->
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Padding" Value="5,0,5,0" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Column.(ToolTipService.ToolTip)}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridColumnHeader">
          <Grid>
            <Border
              x:Name="OuterBorder"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter
                Name="HeaderContent"
                Margin="3,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <!--<Thumb
              x:Name="PART_HeaderGripper"
              Margin="0,0,-9,0"
              HorizontalAlignment="Right"
              Style="{StaticResource GridViewColumnHeaderGripper}" />-->
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Foreground" Value="{StaticResource HoverDataGridHeaderForeground}" />
              <Setter Property="Background" Value="{StaticResource HoverDataGridHeaderBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource HoverDataGridHeaderBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Foreground" Value="{StaticResource PressedDataGridHeaderForeground}" />
              <Setter Property="Background" Value="{StaticResource PressedDataGridHeaderBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource PressedDataGridHeaderBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource DisabledDataGridHeaderForeground}" />
              <Setter Property="Background" Value="{StaticResource DisabledDataGridHeaderBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource DisabledDataGridHeaderBorder}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  En-tête de colonne centrée  -->
  <Style
    x:Key="DataGridColumnHeaderCenterSytle"
    BasedOn="{StaticResource DataGridColumnHeaderStdSytle}"
    TargetType="DataGridColumnHeader">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
  </Style>

  <!--  En-tête de colonne justifiée (Stretch)  -->
  <Style
    x:Key="DataGridColumnHeaderStretchSytle"
    BasedOn="{StaticResource DataGridColumnHeaderStdSytle}"
    TargetType="DataGridColumnHeader">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
  </Style>

  <!--  Contenu de la cellule centré  -->
  <Style x:Key="DataGridTextCellCenterStyle" TargetType="TextBlock">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

  <!--  Contenu de la cellule aligné à gauche  -->
  <Style x:Key="DataGridTextCellLeftStyle" TargetType="TextBlock">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
  </Style>


  <Style TargetType="DataGrid">
    <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupBoxBackground}" />
    <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
    <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    <Setter Property="HeadersVisibility" Value="Column" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="CanUserResizeRows" Value="False" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="AlternationCount" Value="2" />
    <Setter Property="GridLinesVisibility" Value="Horizontal" />
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStdSytle}" />

    <!--  Start - Désactivé car remplacé par le sytle DataGridColumnHeaderStdSytle - 10.07.2020  -->
    <!--<Setter Property="ColumnHeaderStyle">
      <Setter.Value>
        <Style TargetType="DataGridColumnHeader">
          <Setter Property="HorizontalContentAlignment" Value="Left"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Foreground" Value="{StaticResource DarkTextForegroundBrush}"/>
          <Setter Property="Background" Value="{StaticResource DataGridHeaderBackground}"/>
          <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorder}"/>
          <Setter Property="BorderThickness" Value="0,0,1,1"/>
          <Setter Property="Padding" Value="5,0,5,0"/>
          <Setter Property="FontWeight" Value="Bold"/>
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="FontFamily" Value="Segoe UI"/>
          <Setter Property="MinHeight" Value="22"/>
          <Setter Property="Height" Value="Auto"/>
        </Style>
      </Setter.Value>
    </Setter>-->
    <!--  End - Désactivé car remplacé par le sytle DataGridColumnHeaderStdSytle - 10.07.2020  -->

    <Setter Property="RowStyle">
      <Setter.Value>
        <Style TargetType="DataGridRow">
          <Setter Property="SnapsToDevicePixels" Value="true" />
          <Setter Property="Height" Value="Auto" />
          <Setter Property="Foreground" Value="{StaticResource DataGridItemForeground}" />
          <Setter Property="Background" Value="{StaticResource DataGridItemBackground}" />
          <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
          <Setter Property="BorderThickness" Value="0,0,0,1" />
          <Setter Property="FontWeight" Value="Normal" />
          <Setter Property="FontSize" Value="11" />
          <Setter Property="FontFamily" Value="Segoe UI" />
          <Setter Property="Padding" Value="2,2" />
          <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
              <Setter Property="Background" Value="{StaticResource DataGridItemAlternateBackground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="BorderBrush" Value="{StaticResource SelectedDataGridItemBorder}" />
              <Setter Property="Background" Value="{StaticResource SelectedDataGridItemBackground}" />
              <Setter Property="Foreground" Value="{StaticResource SelectedDataGridItemForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource HoverDataGridItemBorder}" />
              <Setter Property="Background" Value="{StaticResource HoverDataGridItemBackground}" />
              <Setter Property="Foreground" Value="{StaticResource HoverDataGridItemForeground}" />
            </Trigger>
            <Trigger Property="IsEditing" Value="True">
              <Setter Property="Background" Value="White" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>

    <Setter Property="CellStyle">
      <Setter.Value>
        <Style TargetType="DataGridCell">
          <Setter Property="SnapsToDevicePixels" Value="true" />
          <Setter Property="Padding" Value="4,3,4,3" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Background" Value="{x:Null}" />
          <Setter Property="MinHeight" Value="22" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border
                  x:Name="CellBorder"
                  Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                  <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsEditing" Value="True">
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter TargetName="CellBorder" Property="Background" Value="Transparent" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="FocusVisualStyle">
            <Setter.Value>
              <Style TargetType="Control">
                <Setter Property="BorderBrush" Value="Transparent" />
              </Style>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="BorderBrush" Value="{StaticResource SelectedListViewItemBorder}" />
              <Setter Property="Background" Value="{StaticResource SelectedDataGridItemBackground}" />
              <Setter Property="Foreground" Value="{StaticResource SelectedDataGridItemForeground}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
    <Setter Property="Width" Value="18" />
    <Setter Property="Background" Value="{StaticResource ListViewHeaderBorder}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Rectangle
              x:Name="HeaderRect"
              Width="1"
              HorizontalAlignment="Center"
              Fill="{TemplateBinding Background}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="HeaderRect" Property="Fill" Value="{StaticResource DisabledListViewHeaderBorder}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>

<!--  Start - Désactivé car remplacé par le sytle DataGridColumnHeaderStdSytle - 10.07.2020  -->
<!--<Setter Property="ColumnHeaderStyle">
      <Setter.Value>
        <Style TargetType="DataGridColumnHeader">
          <Setter Property="HorizontalContentAlignment" Value="Left"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Foreground" Value="{StaticResource DarkTextForegroundBrush}"/>
          <Setter Property="Background" Value="{StaticResource DataGridHeaderBackground}"/>
          <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorder}"/>-->
<!--<Setter Property="BorderThickness" Value="0,0,1,0"/>-->
<!--
          <Setter Property="BorderThickness" Value="0,0,1,1"/>
          <Setter Property="Padding" Value="5,0,5,0"/>
          <Setter Property="FontWeight" Value="Bold"/>
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="FontFamily" Value="Segoe UI"/>
          <Setter Property="MinHeight" Value="22"/>
          <Setter Property="Height" Value="Auto"/>
          <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Column.(ToolTipService.ToolTip)}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridColumnHeader">
                <Grid>
                  <Border x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter Name="HeaderContent" Margin="3,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                  </Border>
                  <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource HoverDataGridHeaderForeground}"/>
                    <Setter Property="Background" Value="{StaticResource HoverDataGridHeaderBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource HoverDataGridHeaderBorder}"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource PressedDataGridHeaderForeground}"/>
                    <Setter Property="Background" Value="{StaticResource PressedDataGridHeaderBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource PressedDataGridHeaderBorder}"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledDataGridHeaderForeground}"/>
                    <Setter Property="Background" Value="{StaticResource DisabledDataGridHeaderBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource DisabledDataGridHeaderBorder}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>-->
<!--  End - Désactivé car remplacé par le sytle DataGridColumnHeaderStdSytle - 10.07.2020  -->





<!--<Style TargetType="DataGrid">-->
<!--  Make the border and grid lines a little less imposing  -->
<!--
    <Setter Property="BorderBrush" Value="#DDDDDD" />
    <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
    <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

    <Setter Property="RowStyle">
      <Setter.Value>
        <Style TargetType="DataGridRow">
          <Style.Triggers>-->
<!--  Highlight a grid row as the mouse passes over  -->
<!--
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="LightCyan" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="CellStyle">
      <Setter.Value>
        <Style TargetType="DataGridCell">
          <Style.Triggers>-->
<!--  Highlight selected rows  -->
<!--
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="#ff66ccff" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="#ff66ccff" />
              <Setter Property="BorderBrush" Value="Black" />
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </Style.Triggers>-->
<!--  Add some padding around the contents of a cell  -->
<!--
          <Setter Property="Padding" Value="4,3,4,3" />
          <Setter Property="BorderBrush" Value="Transparent"/>
          <Setter Property="BorderThickness" Value="1"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border Padding="{TemplateBinding Padding}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                  <ContentPresenter />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="FocusVisualStyle">
            <Setter.Value>
              <Style TargetType="Control">
                <Setter Property="BorderBrush" Value="Transparent" />
              </Style>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>-->


<!--  Test 2  -->

<!--<LinearGradientBrush x:Key="Brush_DataGridHeaderBackground" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#FF1C7CB1" Offset="0" />
    <GradientStop Color="#FF004A83" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="Brush_DataGridHeaderMouseOverBackground" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#FF1C7CAF" Offset="0" />
    <GradientStop Color="#FF042A68" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="Brush_DataGridHeaderBorder" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#FF1B577E" Offset="0" />
    <GradientStop Color="#FF083258" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="Brush_DataGridHeaderSortedBorder" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#B58801" Offset="0" />
    <GradientStop Color="#681900" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="Brush_DataGridHeaderSortedBackground" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#C46007" Offset="0" />
    <GradientStop Color="#AF2600" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="Brush_DataGridSelected" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF3E4854" Offset="1"/>
    <GradientStop Color="#FF5D6670"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Brush_DataGridSelectedForeground" Color="#FFFFFF" />

  <LinearGradientBrush x:Key="Brush_DataGridAltRowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE1FFEE" Offset="0"/>
    <GradientStop Color="#FFC3F9DA" Offset="0.992"/>
  </LinearGradientBrush>-->
<!--  ________________________________________ HEADER __________________________________________  -->
<!--

  <Style x:Key="Style_HeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="SizeWE"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="28" />
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" Background="{StaticResource Brush_DataGridHeaderSortedBackground}" BorderBrush="{StaticResource Brush_DataGridHeaderSortedBorder}" Grid.ColumnSpan="2" />
            <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
            <Rectangle Width="1" Fill="#AAC377" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
            <Rectangle Width="1" Margin="0,0,1,0" Fill="#425B10" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Style_HeaderGripper}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Style_HeaderGripper}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent" />
              <Setter TargetName="BackgroundBorder" Property="BorderBrush"  Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource Brush_DataGridHeaderMouseOverBackground}" />
              <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource Brush_DataGridHeaderBorder}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="DisplayIndex" Value="0">
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border x:Name="BackgroundBorder" Background="Transparent">
            <ContentPresenter VerticalAlignment="Center" Margin="4,0,6,0" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
  </Style>-->
<!--  ________________________________________ DATAGRIDROW __________________________________________  -->
<!--

  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border
          x:Name="DGR_Border"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          SnapsToDevicePixels="True">
            <SelectiveScrollingGrid x:Name="selectiveScrollingGrid">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <DataGridCellsPresenter x:Name="dataGridCellsPresenter"
              Grid.Column="1"
               ItemsPanel="{TemplateBinding ItemsPanel}"
               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              <DataGridRowHeader x:Name="dataGridRowHeader"
              SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
              Grid.RowSpan="2"
              Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
              <Grid Grid.Column="1" Grid.Row="1" Name="Details" Visibility="Collapsed" Background="Gray">
                <DataGridDetailsPresenter x:Name="dataGridDetailsPresenter" />
              </Grid>
            </SelectiveScrollingGrid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource BlueWindow}"/>
              <Setter Property="Foreground" TargetName="dataGridCellsPresenter" Value="White"/>
              <Setter Property="Foreground" TargetName="dataGridRowHeader" Value="White"/>
              <Setter Property="FontSize" TargetName="dataGridRowHeader" Value="13.333"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="DGR_Border" Property="TextElement.Foreground" Value="{StaticResource Brush_DataGridSelectedForeground}" />
              <Setter Property="Visibility" TargetName="dataGridDetailsPresenter" Value="Hidden"/>
              <Setter Property="FontSize" TargetName="dataGridCellsPresenter" Value="14.667"/>
              <Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource Brush_DataGridSelected}"/>

            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
<!--  ________________________________________ DATAGRID __________________________________________  -->
<!--

  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="AlternatingRowBackground" Value="{StaticResource Brush_DataGridAltRowBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Background="{TemplateBinding Background}">
            <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" Background="{StaticResource Brush_DataGridHeaderBackground}" BorderBrush="{StaticResource Brush_DataGridHeaderBorder}" BorderThickness="0,1" />
                    <Button
                    Command="{x:Static DataGrid.SelectAllCommand}"
                    Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=RowHeaderActualWidth}"
                    Focusable="false"
                    OverridesDefaultStyle="True"
                   >
                      <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                          <Grid>
                            <Border Background="{StaticResource Brush_DataGridHeaderBackground}" BorderBrush="{StaticResource Brush_DataGridHeaderBorder}" BorderThickness="0,1">
                              <Path x:Name="Arrow" VerticalAlignment="Bottom" Margin="4" Fill="#3000" Width="11" Height="11" Stretch="Fill" Data="M1,0 L1,1 0,1 z"/>
                            </Border>
                            <Rectangle Width="1" Fill="#AAC377" HorizontalAlignment="Right" />
                            <Rectangle Width="1" Margin="0,0,1,0" Fill="#425B10" HorizontalAlignment="Right" />
                          </Grid>
                        </ControlTemplate>
                      </Button.Template>
                    </Button>
                    <DataGridColumnHeadersPresenter
                    Grid.Column="1"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>
                    <ScrollContentPresenter Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />
                    <ScrollBar
                    Name="PART_VerticalScrollBar"
                    Grid.Row="1"
                    Grid.Column="2"
                     Orientation="Vertical"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar
                      Grid.Column="1"
                      Name="PART_HorizontalScrollBar"
                      Orientation="Horizontal"
                      Maximum="{TemplateBinding ScrollableWidth}"
                      ViewportSize="{TemplateBinding ViewportWidth}"
                      Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
    </Style.Triggers>
  </Style>-->

<!--  Mon Style  -->

<!--<Style TargetType="DataGrid">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Foreground" Value="Red"/>
    <Setter Property="Background" Value="{StaticResource DataGridBackground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
    <Setter Property="Width" Value="Auto"/>
    <Setter Property="AlternationCount" Value="2"/>
    <Setter Property="AlternatingRowBackground" Value="{StaticResource DataGridAlternatingRowBackground}"/>
    <Setter Property="Margin" Value="5"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="AutoGenerateColumns" Value="True"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="HeadersVisibility" Value="Column"/>
    <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DarkBorderBrush}"/>
  </Style>

  <Style TargetType="DataGridColumnHeader">
    <Setter Property="Foreground" Value="Red"/>
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="MinHeight" Value="22"/>
    <Setter Property="Height" Value="Auto"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
  </Style>-->



